// The AWT Graphics Program
// This is the student, starting version of Graphics Lab 01.
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.applet.*;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;


public class Lab2 extends Applet implements ActionListener, KeyListener, MouseListener
{
	/*
	 * Goals:
	 * create applet that allows you to place lines and create ellipses based on what key is pressed
	 * controls:
	 * l is line origninating at place selected
	 * r is for rectangle
	 * c is for circle
	 * 
	 */
	
	/*int posx1 [];
	int posy1 [];
	int posx2 [];
	int posy2 [];
	int table_width;
	int table_height;
	*/
	
	
	int x;
	int y;
	int x2;
	int y2;
	
	int c1;
	int c2;
	String s = "";
	int table_width;
	int table_height;
    

	public void init(){
		table_width = getSize().width;
		table_height = getSize().height;
		
		addKeyListener( this );
		addMouseListener( this );
	}
	
	
	public void paint(Graphics g)
    {
    	this.setSize(800,600);
    	x = table_width / 4 + 50;
    	y = table_height / 4 + 50;
    	
    	
    	try {
			URL fontUrl = new URL("file:///C:/Users/1844478/workspace/Methods Lab 2019/src/FFFFORWA.TTF");
			Font font = Font.createFont(Font.TRUETYPE_FONT, fontUrl.openStream());
	        font = font.deriveFont(Font.PLAIN,40);
	        GraphicsEnvironment ge =
	            GraphicsEnvironment.getLocalGraphicsEnvironment();
	        ge.registerFont(font);
	        g.setFont(font);
	        g.drawString("APCS", table_width + 50 , table_height + 100 );
		} catch (MalformedURLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (FontFormatException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    	g.setColor(Color.GREEN);
    	
    	g.drawString(s, x + 30, y + 20);
    	
         //DRAW CUBE
    	g.drawLine(x, y, x + 100, y - 50);
    	g.drawLine(x + 100, y -50, x + 100, y + 100);
    	g.drawLine(x + 100, y -50 , x + 250, y - 50);
    	g.drawLine(x, y, x + 100, y);
    	g.drawLine(x + 250, y -50 , x + 250, y + 100);
    	g.drawLine(x + 100 , y + 100 , x + 250, y + 100);
    	g.drawLine(x, y, x, y + 100);
    	g.drawLine(x, y + 100, x + 100, y + 100);
    	g.drawLine(x + 100, y , x + 250, y -50);
    	
    	
    	
    	//draw plane
    	

        // DRAW SPHERE
    	



        // DRAW INSCRIBED/CIRCUMSCRIBED TRIANGLE
    	radius
    	g.drawOval(350 , 350 , 200, 200);
    	



        // DRAW APCS
    	
    	 



        // DRAW PACMEN FLOWER




    }

	@Override
	public void keyTyped(KeyEvent arg0) {
		int key = arg0.getKeyCode();
		switch(key){
		case 78:
			//paintLine(x, y, x2, y2);
		}
		
	}

	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		repaint();
		
	}

	@Override
	public void keyPressed(KeyEvent e) {
	    int key = e.getKeyCode();
	    System.out.println(key);
	    switch(key){
	    case(40):
	    	x += 100;
	    	repaint();
	    	break;
	    case(37):
	    	y += 100;
	    	repaint();
	    	break;
	    }
		
	}

	@Override
	public void keyReleased(KeyEvent e) {
		int key = e.getKeyCode();
		System.out.println(key);
		
	}

	@Override
	public void mouseClicked(MouseEvent arg0) {
		// TODO Auto-generated method stub
		if(arg0.getButton() == MouseEvent.BUTTON1){
			x = arg0.getX();
			y = arg0.getY();
		}
		if(arg0.getButton() == MouseEvent.BUTTON3){
			//x2 = arg0.getX();
			//y2 = arg0.getY();
		}
		
		
		s = "x: " + x + "y" + y;
		repaint();
		
	}

	@Override
	public void mouseEntered(MouseEvent arg0) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void mouseExited(MouseEvent arg0) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void mousePressed(MouseEvent arg0) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void mouseReleased(MouseEvent arg0) {
		// TODO Auto-generated method stub
		
	}

}
